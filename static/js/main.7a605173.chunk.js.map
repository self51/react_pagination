{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","numberPages","Math","ceil","pages","useMemo","Array","fill","map","_","inx","_jsxs","className","children","_jsx","cn","disabled","href","onClick","setNextPage","page","active","concat","setPrevPage","items","from","to","numbers","n","push","getNumbers","App","currPage","setCurrPage","useState","setPerPage","totalItems","length","firstIndex","lastIndex","min","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAUO,MAAMA,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAQC,mBACZ,IAAM,IAAIC,MAAcL,GAAaM,KAAK,GAAGC,KAAI,CAACC,EAAGC,IAAQA,EAAM,KACnE,CAACT,IAeH,OACEU,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAA0B,IAAhBjB,IAAqBc,SAC9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAA+B,IAAhBlB,EACfmB,QApBYC,KACdpB,EAAc,GAChBC,EAAaD,EAAc,IAkBFc,SACtB,WAKFT,EAAMI,KAAIY,GACTN,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEM,OAAQtB,IAAgBqB,IAAQP,SAG7DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAK,OAAMF,GACVF,QAASA,IAAMlB,EAAaoB,GAAMP,SAEjCO,KAREA,KAaTN,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEC,SAAUjB,IAAgBE,IAAeY,SAEtEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAelB,IAAgBE,EAC/BiB,QA5CYK,KACdxB,EAAcE,GAChBD,EAAaD,EAAc,IA0CFc,SACtB,eCpEHW,ECLC,SAAoBC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IAAItB,KAAIoB,GAAC,QAAAN,OAAYM,KAEpCG,EAAgBA,KAC3B,MAAOC,EAAUC,GAAeC,mBAAS,IAClCpC,EAASqC,GAAcD,mBAAS,GAEjCE,EAAaZ,EAAMa,OACnBC,GAAcN,EAAW,GAAKlC,EAC9ByC,EAAYrC,KAAKsC,IAAIR,EAAWlC,EAASsC,GACzCK,EAAejB,EAAMkB,MAAMJ,EAAYC,GAO7C,OACE5B,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,CAAC,QAC3BmB,EAAS,WAASM,EAAa,EAAE,MAAIC,EAAU,OAAKH,EAAW,OAGvEzB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACRgC,GAAG,kBACH/B,UAAU,eACVgC,MAAO9C,EACP+C,SApBeC,IACvBX,GAAYW,EAAMC,OAAOH,OACzBX,EAAY,IAkBsBpB,SAAA,CAE1BC,cAAA,UAAQ8B,MAAM,IAAG/B,SAAC,MAClBC,cAAA,UAAQ8B,MAAM,IAAG/B,SAAC,MAClBC,cAAA,UAAQ8B,MAAM,KAAI/B,SAAC,OACnBC,cAAA,UAAQ8B,MAAM,KAAI/B,SAAC,YAIvBC,cAAA,SAAOkC,QAAQ,kBAAkBpC,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACnB,EAAU,CACTE,MAAOuC,EACPtC,QAASA,EACTC,YAAaiC,EACbhC,aAAciC,IAGhBnB,cAAA,MAAAD,SACG4B,EAAajC,KAAIyC,GAChBnC,cAAA,MAAI,UAAQ,OAAMD,SACfoC,GADqBA,WExDlCC,IAASC,OAAOrC,cAACiB,EAAG,IAAKqB,SAASC,eAAe,U","file":"static/js/main.7a605173.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React, { useMemo } from 'react';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberPages = Math.ceil(total / perPage);\n  const pages = useMemo(\n    () => new Array<number>(numberPages).fill(0).map((_, inx) => inx + 1),\n    [numberPages],\n  );\n\n  const setNextPage = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const setPrevPage = () => {\n    if (currentPage < numberPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={setNextPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={cn('page-item', { active: currentPage === page })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', { disabled: currentPage === numberPages })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numberPages}\n          onClick={setPrevPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import './App.css';\nimport React, { useState } from 'react';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currPage, setCurrPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const totalItems = items.length;\n  const firstIndex = (currPage - 1) * perPage;\n  const lastIndex = Math.min(currPage * perPage, totalItems);\n  const visibleItems = items.slice(firstIndex, lastIndex);\n\n  const handleSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currPage} (items {firstIndex + 1} - {lastIndex} of {totalItems})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelection}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currPage}\n        onPageChange={setCurrPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}